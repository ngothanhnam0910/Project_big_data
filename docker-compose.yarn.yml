version: '3.8'

services:

  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888
    networks:
      coinhub_net:
        ipv4_address: 172.20.0.2

  zookeeper-2:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-2
    ports:
      - "2182:2182"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888
    networks:
      coinhub_net:
        ipv4_address: 172.20.0.3



  kafka-1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2182"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
    depends_on:
      - zookeeper-1
      - zookeeper-2
    networks:
      coinhub_net:
        ipv4_address: 172.20.0.15

  kafka-2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-2
    ports:
      - "9093:9093"
      - "29093:29093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:19093,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093,DOCKER://host.docker.internal:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2182"
      KAFKA_BROKER_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
    depends_on:
      - zookeeper-1
      - zookeeper-2
    networks:
      coinhub_net:
        ipv4_address: 172.20.0.6



  cassandra:
    image: cassandra:4.0.5
    container_name: cassandra
    restart: on-failure
    hostname: cassandra
    env_file:
      - ./spark_apps/cassandra/cassandra.env
    ports:
      - '9042:9042'
    volumes:
      - ../storage/cassandra:/var/lib/cassandra
    networks:
      coinhub_net:
        ipv4_address: 172.20.0.11


  spark-yarn-master:
    container_name: da-spark-yarn-master
    build:
      dockerfile: Dockerfile-yarn
      context: .
    image: da-spark-yarn-image
    entrypoint: ['./entrypoint.sh', 'master']
    volumes:
      - ./book_data:/opt/spark/data
      - ./spark_apps:/opt/spark/apps
    env_file:
      - .env.spark
    ports:
      - '9090:8080'
      - '9870:9870'
      - '7077:7077'
      - '8088:8088'
    networks:
      coinhub_net:
        ipv4_address: 172.20.0.12

  spark-yarn-worker:
    image: da-spark-yarn-image
    entrypoint: ['./entrypoint.sh', 'worker']
    depends_on:
      - spark-yarn-master
    env_file:
      - .env.spark
    volumes:
      - ./book_data:/opt/spark/data
      - ./spark_apps:/opt/spark/apps
    networks:
      - 'coinhub_net'


  yarn-history-server:
    container_name: da-spark-yarn-history
    image: da-spark-yarn-image
    entrypoint: ['./entrypoint.sh', 'history']
    depends_on:
      - spark-yarn-master
    env_file:
      - .env.spark
    ports:
      - '18080:18080'
    networks:
      coinhub_net:
        ipv4_address: 172.20.0.13


networks:
  coinhub_net:
    name: coinhub_net
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
    labels:
      - "com.docker.compose.network=coinhub_net"
      - "com.docker.compose.project=coinhub"
      - "com.docker.compose.version=3.8"
